NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
16067      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16068      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16069      put '<Node Id="FIMPORT" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Update" Pid="" Gridid=""/>';
16070      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-USIT37L,
      Local Host IP addr=fe80::8811:5a13:b162:1891%8,
      Peer Hostname Name=DESKTOP-USIT37L,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=52315,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16071      %let emloopmode =;
*------------------------------------------------------------* 
* 
* FIMPORT : Beginning update before running 
* datetime : 02NOV2019:23:22:49 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16275      %let emexceptionString =;
16276      %let EMEXCEPTIONSTRING=;
16277      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16278      * UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   * UPDATE: FIMPORT;
16279      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16280      %let EM_ACTION = UPDATE;
16281      %let syscc = 0;
16282      /* Fimport.source */
16283      %macro main;
16284            %if %upcase(&EM_ACTION) = CREATE %then %do;
16285               filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16286               %include temp;
16287               filename temp;
16288               %create;
16289            %end;
16290            %else
16291            %if %upcase(&EM_ACTION) = TRAIN %then %do;
16292               filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16293               %include temp;
16294               filename temp;
16295               %train;
16296            %end;
16297            %else
16298            %if %upcase(&EM_ACTION) = UPDATE %then %do;
16299               filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16300               %include temp;
16301               filename temp;
16302               %update;
16303            %end;
16304            %else
16305            %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16306               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16307               %include temp;
16308               filename temp;
16309               %property;
16310            %end;
16311             %else
16312            %if %upcase(&EM_ACTION) = SCORE %then %do;
16313               filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16314               %include temp;
16315               filename temp;
16316               %score;
16317            %end;
16318            %else
16319            %if %upcase(&EM_ACTION) = REPORT %then %do;
16320               filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16321               %include temp;
16322               filename temp;
16323               %report;
16324            %end;
16325            %else
16326            %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16327               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16328               %include temp;
16329               filename temp;
16330               %openvariableset;
16331            %end;
16332            %else
16333            %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16334               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16335               %include temp;
16336               filename temp;
16337               %closevariableset;
16338            %end;
16339      %mend main;
16340      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emsamp.Fimport_update.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_UPDATE.SOURCE.
16341     +%macro update;
16342     +    %let oldrole = %str();
16343     +    data _null_;
16344     +       set &em_data_exportset;
16345     +       where NODEPORT='TRAIN';
16346     +       call symput('oldrole', ROLE);
16347     +    run;
16348     +    %if &oldrole ne &em_property_role %then %do;
16349     +        data &em_data_exportset;
16350     +           set &em_data_exportset;
16351     +           if NODEPORT='TRAIN' then do;
16352     +              ROLE="&em_property_role";
16353     +              NEEDUPDATE='Y';
16354     +              EXPORT='Y';
16355     +           end;
16356     +        run;
16357     +        filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16358     +        data _null_;
16359     +           file x;
16360     +           put ' ';
16361     +        run;
16362     +        filename x;
16363     +    %end;
16364     +    %else %do;
16365     +        data &em_data_exportset;
16366     +           set &em_data_exportset;
16367     +           if NODEPORT='TRAIN' then do;
16368     +              ROLE="&em_property_role";
16369     +              NEEDUPDATE='Y';
16370     +              EXPORT='Y';
16371     +           end;
16372     +        run;
16373     +    %end;
16374     +
16375     +    %em_getname(key=EMCMETADEFAULT, type=DATA);
16376     +    %if %sysfunc(exist(&em_user_emcmetadefault)) and ^%sysfunc(exist(&em_lib..&em_nodeid._CMETA_TRAIN)) %then %do;
16377     +        data &em_lib..&em_nodeid._CMETA_TRAIN;
16378     +           set &em_user_emcmetadefault;
16379     +           drop DROP;
16380     +           where DROP='N';
16381     +        run;
16382     +    %end;
16383     +
16384     +%mend update;
16385     +
16386     +
16387     +
16388     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(UPDATE):   data _null_;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   where NODEPORT='TRAIN';
MPRINT(UPDATE):   call symput('oldrole', ROLE);
MPRINT(UPDATE):   run;

NOTE: There were 1 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
      WHERE NODEPORT='TRAIN';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(UPDATE):   data EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   if NODEPORT='TRAIN' then do;
MPRINT(UPDATE):   ROLE="TRAIN";
MPRINT(UPDATE):   NEEDUPDATE='Y';
MPRINT(UPDATE):   EXPORT='Y';
MPRINT(UPDATE):   end;
MPRINT(UPDATE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(UPDATE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16389      *------------------------------------------------------------*;
16390      * End UPDATE: FIMPORT;
16391      *------------------------------------------------------------*;

16392      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3\Workspaces\EMWS1\FIMPORT\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16394      %let _HPDMGRIDHOST=;
16395      %let _HPDMGRIDINSTALLLOC=;
16396      %let _HPDMGRIDDATASERVER=;
16397      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* FIMPORT : End update 
* datetime : 02NOV2019:23:22:49 
* 
*------------------------------------------------------------* 
16398      %let _emdsep = \;
16399      %em_getactionstatus(emlib =EMWS1, nodeid=FIMPORT);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16400      %let em_Train = Y;
16401      %let em_Report = Y;
16402      %let em_Score = Y;
16403      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16404      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16405      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16406      put '<Node Id="FIMPORT" Event="Run" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Run" Pid="" Gridid=""/>';
16407      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-USIT37L,
      Local Host IP addr=fe80::8811:5a13:b162:1891%8,
      Peer Hostname Name=DESKTOP-USIT37L,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=52315,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

16408      options sascmd="!sascmdv -nosyntaxcheck -noasynchio -noobjectserver";
MPRINT(EM_DIAGRAM):    options sascmd="!sascmdv -nosyntaxcheck -noasynchio -noobjectserver";
16409      %let SYSCC=0;
16410      signon C0I3YP_K macvar=C0I3YP_K;
MPRINT(EM_DIAGRAM):   signon macvar=C0I3YP_K;
WARNING: TCP Access method tracing is enabled.
NOTE: Default SASCMD value being used is: "C:\Program Files\SASHome\SASFoundation\9.4\SAS.EXE" -nologo -noterminal -noxcmd -objectserver -objectserverparms "protocol=bridge dnsname=127.0.0.1 jcbp=52316" -sspi -secpackage NTLM  -xcmd.
NOTE: Remote signon to C0I3YP_K commencing (SAS Release 9.04.01M3P062415).
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M3) 
      Licensed to UNIVERSITI MALAYA, Site 12600285.
NOTE: This session is executing on the X64_8PRO  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.1
      SAS/ETS 14.1
      SAS/OR 14.1
      SAS/IML 14.1
      SAS/QC 14.1

NOTE: Additional host information:

 X64_8PRO WIN 6.2.9200  Workstation

NOTE: SAS initialization used:
      real time           0.17 seconds
      cpu time            0.10 seconds
      
NOTE: Remote signon to C0I3YP_K complete.
16411      rsubmit C0I3YP_K wait=N persist=N  ;
MPRINT(EM_DIAGRAM):    rsubmit wait=N persist=N ;
The SAS System

NOTE: Background remote submit to C0I3YP_K in progress.
NOTE: Remote submit to C0I3YP_K commencing.
MPRINT(EM_DIAGRAM):   %global emexceptionstring emloopmode emloopnumber;
MPRINT(EM_DIAGRAM):   %let EMUSERID = %bquote(Forge 15 i7);
MPRINT(EM_DIAGRAM):   %let EMLDSPATH = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3\DataSources);
MPRINT(EM_DIAGRAM):   %let EMFLOWMODE = Y;
MPRINT(EM_DIAGRAM):   %let EMONODE = %bquote(FIMPORT);
MPRINT(EM_DIAGRAM):   %let EMPATH = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3\Workspaces\EMWS1);
MPRINT(EM_DIAGRAM):   %let EMWS = EMWS1;
MPRINT(EM_DIAGRAM):   %let EMNODECLASS = SASHELP.EMCORE.EXTENSION.CLASS;
MPRINT(EM_DIAGRAM):   %let EMSTATUSDIR = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3\Workspaces\EMWS1\System);
MPRINT(EM_DIAGRAM):   %let EM_DEBUG =;
MPRINT(EM_DIAGRAM):   %let EMPROJECTCODE = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3\System\STARTUP.sas);
MPRINT(EM_DIAGRAM):   %let EMSERVERCODE = %nrstr();
MPRINT(EM_DIAGRAM):   %let EM_USERID = %bquote(Forge 15 i7);
MPRINT(EM_DIAGRAM):   %let EM_METAHOST =;
MPRINT(EM_DIAGRAM):   %let EM_METAPORT =;
MPRINT(EM_DIAGRAM):   %let EM_JAVAPACKAGE = %bquote();
MPRINT(EM_DIAGRAM):   %let EMPROJECTPATH = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3);
MPRINT(EM_DIAGRAM):   %let EMPROJNAME = %nrstr(DataMiningMilestone3);
MPRINT(EM_DIAGRAM):   %let EMPROJPATH = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3);
MPRINT(EM_DIAGRAM):   %let em_Train = Y;
MPRINT(EM_DIAGRAM):   %let em_Score = Y;
MPRINT(EM_DIAGRAM):   %let em_Report = Y;
MPRINT(EM_DIAGRAM):   %let emloopmode =;
MPRINT(EM_DIAGRAM):   %let emloopnumber =0;
MPRINT(EM_DIAGRAM):   %let emloopId =FIMPORT;
MPRINT(EM_DIAGRAM):   %let emexceptionstring=;
MPRINT(EM_DIAGRAM):   options VBUFSIZE= 64M;
MPRINT(EM_DIAGRAM):   %em5run();
MPRINT(EM_DIAGRAM):   %put &&emexceptionstring;
MPRINT(EM_DIAGRAM):   %sysrput emerror_FIMPORT = &&emexceptionstring;
MPRINT(EM_DIAGRAM):   %put &&emloopmode;
MPRINT(EM_DIAGRAM):   %sysrput emloopmode_FIMPORT = &&emloopmode;
MPRINT(EM_DIAGRAM):   endrsubmit;
16412      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16413      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16414      put '<Node Id="FIMPORT" Event="Run" Pid=" " Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Run" Pid=" " Gridid=""/>';
16415      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-USIT37L,
      Local Host IP addr=fe80::8811:5a13:b162:1891%8,
      Peer Hostname Name=DESKTOP-USIT37L,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=52315,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16416      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16417      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
16418      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16419      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
16420      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16421      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
16422      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16423      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
16424      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16425      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1     %global emexceptionstring emloopmode emloopnumber;
2     %let EMUSERID = %bquote(Forge 15 i7);
3     %let EMLDSPATH = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3\DataSources);
4     %let EMFLOWMODE = Y;
5     %let EMONODE = %bquote(FIMPORT);
6     %let EMPATH = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3\Workspaces\EMWS1);
7     %let EMWS = EMWS1;
8     %let EMNODECLASS = SASHELP.EMCORE.EXTENSION.CLASS;
9     %let EMSTATUSDIR = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3\Workspaces\EMWS1\System);
10    %let EM_DEBUG =;
11    %let EMPROJECTCODE = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3\System\STARTUP.sas);
12    %let EMSERVERCODE = %nrstr();
13    %let EM_USERID = %bquote(Forge 15 i7);
14    %let EM_METAHOST =;
15    %let EM_METAPORT =;
16    %let EM_JAVAPACKAGE = %bquote();
17    %let EMPROJECTPATH = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3);
18    %let EMPROJNAME = %nrstr(DataMiningMilestone3);
19    %let EMPROJPATH = %nrstr(C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3);
20    %let em_Train = Y;
21    %let em_Score = Y;
22    %let em_Report = Y;
23    %let emloopmode =;
24    %let emloopnumber =0;
25    %let emloopId =FIMPORT;
26    %let emexceptionstring=;
27    options VBUFSIZE= 64M;
28    %em5run();

6005   %let EM_MACROS=Y;
6006   filename temp catalog 'sashelp.emutil.em_loadrunmacros.source';
6007   %include temp;
NOTE: ALT_TOOLS Macros loaded
NOTE: Test usage by running the EM_TEST macro
NOTE: Fileref _TMPHPDM has been deassigned.
NOTE: Fileref _TMPHPDM has been deassigned.
9853   filename temp;
NOTE: Fileref TEMP has been deassigned.

*------------------------------------------------------------* 
* 
* FIMPORT : Running 
* datetime : 02NOV2019:23:22:50 
* 
*------------------------------------------------------------* 
9854   %let SYSCC =0;
9855   %let EMGROUPMODE =;
9856   %let EMGROUPID =;
17228  data EMWS1.FIMPORT_EMTRAINVARIABLE;
17229  length NAME $64;
17230  set EMWS1.FIMPORT_VariableSet;
17231  label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
17232     "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
17233  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, META_ROLE_VLABEL, NOQUOTE))";
17234  label LEVEL = "%sysfunc(sasmsg(sashelp.dmine, META_LEVEL_VLABEL, NOQUOTE))";
17235  label REPORT = "%sysfunc(sasmsg(sashelp.dmine, META_REPORT_VLABEL, NOQUOTE))";
17236  label DROP = "%sysfunc(sasmsg(sashelp.dmine, META_DROP_VLABEL, NOQUOTE))";
17237  label ORDER = "%sysfunc(sasmsg(sashelp.dmine, META_ORDER_VLABEL, NOQUOTE))";
17238  drop lowerlimit upperlimit creator--type format--length;
17239  run;

NOTE: There were 5 observations read from the data set EMWS1.FIMPORT_VARIABLESET.
NOTE: The data set EMWS1.FIMPORT_EMTRAINVARIABLE has 5 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

17240  %let emexceptionstring =;
*------------------------------------------------------------* 
* 
* FIMPORT : End run 
* datetime : 02NOV2019:23:22:52 
* 
*------------------------------------------------------------* 
NOTE: The PROCEDURE DISPLAY printed pages 1-3.
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           2.44 seconds
      cpu time            1.28 seconds
      

17243   %put &&emexceptionstring;
 
17244   %sysrput emerror_FIMPORT = &&emexceptionstring;
17245   %put &&emloopmode;
 
17246   %sysrput emloopmode_FIMPORT = &&emloopmode;
NOTE: Remote submit to C0I3YP_K complete.
NOTE: Remote signoff from C0I3YP_K commencing.
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           2.69 seconds
      cpu time            1.40 seconds
      
NOTE: Remote signoff from C0I3YP_K complete.
traverser_runingNode_note 
16426      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16427      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "FIMPORT" ran. 
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Forge 15 i7\Desktop\UM 2nd Semester\WQD 7005 -Data Mining\Project\milestone 3\DataMiningMilestone3\Workspaces\EMWS1\FIMPORT\TRAINPROPERTIES.xml' encoding="UTF-8" NOBOM;
Node "FIMPORT" succeeded. 
16429      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16430      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16431      put '<Node Id="FIMPORT" Event="Complete" Pid="7464" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Complete" Pid="7464" Gridid=""/>';
16432      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-USIT37L,
      Local Host IP addr=fe80::8811:5a13:b162:1891%8,
      Peer Hostname Name=DESKTOP-USIT37L,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=52315,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: Run Completed 
NOTE: There are no active tasks/transactions.
16433      waitfor _all_ C0I3YP_K;
MPRINT(EM_DIAGRAM):    waitfor _all_ C0I3YP_K;
16434      signoff C0I3YP_K;
MPRINT(EM_DIAGRAM):   signoff;
NOTE: A link to C0I3YP_K does not exist.  SIGNOFF is not necessary.
16435      proc printto;
MPRINT(EM_DIAGRAM):   proc printto;
16436      run;
MPRINT(EM_DIAGRAM):   run;

